#ifndef SOURCE_UTILITY_RING_BUFFER_H_
#define SOURCE_UTILITY_RING_BUFFER_H_
/**********************************************************************************************************************
 * Includes
 *********************************************************************************************************************/
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>
#include <stdio.h>
/**********************************************************************************************************************
 * Exported definitions and macros
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * Exported types
 *********************************************************************************************************************/
typedef struct sRingBuffer_t sRingBuffer_t;

/**********************************************************************************************************************
 * Exported variables
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * Prototypes of exported functions
 *********************************************************************************************************************/
sRingBuffer_t *RingBufferInit (size_t capacity);
bool RingBufferIsEmpty (sRingBuffer_t *r_buffer);
bool RingBufferIsFull (sRingBuffer_t *r_buffer);
bool RingBufferEnqueue (sRingBuffer_t *r_buffer, uint8_t data);
bool RingBufferDequeue (sRingBuffer_t *r_buffer, uint8_t *data);
bool RingBufferFree (sRingBuffer_t *r_buffer);

#endif /* SOURCE_UTILITY_RING_BUFFER_H_ */
